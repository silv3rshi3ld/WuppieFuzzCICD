# Stage 1: Build environment
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS builder

# Install Python and other build dependencies
RUN apt-get update && \
    apt-get install -y \
    python3 \
    python3-pip \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Clone Restler
RUN git clone --depth 1 https://github.com/microsoft/restler-fuzzer /restler

# Build RESTler
RUN cd /restler && \
    python3 ./build-restler.py --dest /restler/restler

# Stage 2: Runtime environment
FROM python:3.12-slim

# Install .NET Runtime (required for RESTler)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    wget \
    && wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    dotnet-runtime-8.0 \
    jq \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy built RESTler from builder
COPY --from=builder /restler/restler /restler/restler

# Install Python dependencies
RUN pip install --no-cache-dir \
    applicationinsights \
    jsonpickle \
    requests

# Configure workspace
WORKDIR /workspace
RUN mkdir -p /workspace/fuzzing_results

# Copy entrypoint, config, and settings
COPY services/restler/config/entrypoint.sh /entrypoint.sh
COPY services/restler/config/settings.json /workspace/settings.json
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
