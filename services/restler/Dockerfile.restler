# Stage 1: Build RESTler from source
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS builder

# Install required tools
RUN apt-get update && apt-get install -y python3 python3-pip git

# Clone the official RESTler repository from GitHub
RUN git clone https://github.com/microsoft/restler-fuzzer.git /restler-fuzzer

WORKDIR /restler-fuzzer

# Build RESTler using the provided build script.
# This produces the RESTler binaries in /restler_bin.
RUN python3 build-restler.py --dest_dir /restler_bin

# Stage 2: Create a lean runtime image
FROM mcr.microsoft.com/dotnet/aspnet:6.0-alpine

# Install Python in the runtime image (if needed by RESTler)
RUN apk add --no-cache python3

# Copy the built RESTler binary from the builder stage
COPY --from=builder /restler_bin /RESTler

# Set execute permissions on RESTler binaries
RUN chmod +x /RESTler/restler
RUN chmod +x /RESTler/engine/*

# Precompile python modules in the engine directory
RUN python3 -m compileall -b /RESTler/engine

# Copy the entrypoint script into the image
COPY services/restler/config/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Set the working directory
WORKDIR /RESTler

# Set the default entrypoint to our script
ENTRYPOINT ["/entrypoint.sh"]
