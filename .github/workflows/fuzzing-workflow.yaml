name: Parallel API Fuzzing

on:
  push:
    branches: [main, SingleWorker]
  pull_request:
    branches: [main, SingleWorker]
  workflow_dispatch:
    inputs:
      restler_time:
        description: 'RESTler time (hours)'
        type: number
        default: 1
      wuppie_time:
        description: 'WuppieFuzz time (mins)'
        type: number
        default: 60
      evomaster_time:
        description: 'EvoMaster time (mins)'
        type: number
        default: 10

env:
  BASE_DIR: ${{ github.workspace }}

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_images:
    runs-on: [self-hosted, manager-runner]
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push images
        run: |
          docker build -t ghcr.io/silv3rshi3ld/vampi:latest ${{ env.BASE_DIR }}/services/vampi
          docker push ghcr.io/silv3rshi3ld/vampi:latest

          # Fixed RESTler Dockerfile path
          docker build -t ghcr.io/silv3rshi3ld/restler:latest \
            -f ${{ env.BASE_DIR }}/services/restler/Dockerfile.restler \
            ${{ env.BASE_DIR }}/services/restler
          docker push ghcr.io/silv3rshi3ld/restler:latest

          docker build -t ghcr.io/silv3rshi3ld/evomaster:latest \
            -f ${{ env.BASE_DIR }}/services/evomaster/Dockerfile.evomaster \
            ${{ env.BASE_DIR }}/services/evomaster
          docker push ghcr.io/silv3rshi3ld/evomaster:latest

          docker build -t ghcr.io/silv3rshi3ld/wuppiefuzz:latest \
            -f ${{ env.BASE_DIR }}/services/wuppiefuzz/Dockerfile.wuppiefuzz \
            ${{ env.BASE_DIR }}/services/wuppiefuzz
          docker push ghcr.io/silv3rshi3ld/wuppiefuzz:latest

  deploy_restler_vampi:
    needs: build_images
    runs-on: [self-hosted, manager-runner]
    outputs:
      vampi_ip: ${{ steps.get-ip.outputs.ip }}
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create network
        run: docker network create restler_network_${{ github.run_id }}

      - name: Deploy VAmPI
        run: |
          docker run -d \
            --name vampi-restler_${{ github.run_id }} \
            --network restler_network_${{ github.run_id }} \
            -e vulnerable=1 \
            ghcr.io/silv3rshi3ld/vampi:latest

      - name: Get IP
        id: get-ip
        run: |
          IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' vampi-restler_${{ github.run_id }})
          echo "ip=$IP" >> $GITHUB_OUTPUT

  deploy_wuppiefuzz_vampi:
    needs: build_images
    runs-on: [self-hosted, worker-runner]
    outputs:
      vampi_ip: ${{ steps.get-ip.outputs.ip }}
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create network
        run: docker network create wuppiefuzz_network_${{ github.run_id }}

      - name: Deploy VAmPI
        run: |
          docker run -d \
            --name vampi-wuppiefuzz_${{ github.run_id }} \
            --network wuppiefuzz_network_${{ github.run_id }} \
            -e vulnerable=1 \
            ghcr.io/silv3rshi3ld/vampi:latest

      - name: Get IP
        id: get-ip
        run: |
          IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' vampi-wuppiefuzz_${{ github.run_id }})
          echo "ip=$IP" >> $GITHUB_OUTPUT

  run_restler:
    needs: deploy_restler_vampi
    runs-on: [self-hosted, manager-runner]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create results directory
        run: mkdir -p fuzzing_results/restler

      - name: Run RESTler (Critical Fix Here)
        env:
          TARGET_IP: ${{ needs.deploy_restler_vampi.outputs.vampi_ip }}
        run: |
          docker run --rm \
            --network restler_network_${{ github.run_id }} \
            -v ${{ github.workspace }}/fuzzing_results/restler:/workspace/output \
            -v ${{ env.BASE_DIR }}/services/vampi/openapi_specs/openapi3.yml:/workspace/openapi3.yml:ro \
            -v ${{ env.BASE_DIR }}/services/restler/config:/workspace/config:ro \
            -e TARGET_IP=${{ env.TARGET_IP }} \
            -e TARGET_PORT=5000 \
            -e RUN_FUZZ_LEAN=true \
            -e RUN_FUZZ=true \
            -e FUZZ_LEAN_TIME_BUDGET="${{ github.event.inputs.restler_time }}" \
            -e FUZZ_TIME_BUDGET="${{ github.event.inputs.restler_time }}" \
            ghcr.io/silv3rshi3ld/restler:latest

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: restler-results
          path: fuzzing_results/restler

  run_wuppiefuzz:
    needs: deploy_wuppiefuzz_vampi
    runs-on: [self-hosted, worker-runner]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create results directory
        run: mkdir -p fuzzing_results/wuppiefuzz

      - name: Run WuppieFuzz (Critical Fix Here)
        env:
          TARGET_IP: ${{ needs.deploy_wuppiefuzz_vampi.outputs.vampi_ip }}
        run: |
          docker run --rm \
            --network wuppiefuzz_network_${{ github.run_id }} \
            -v ${{ github.workspace }}/fuzzing_results/wuppiefuzz:/app/results \
            -v ${{ env.BASE_DIR }}/services/vampi/openapi_specs/openapi3.yml:/app/openapi3.yml:ro \
            ghcr.io/silv3rshi3ld/wuppiefuzz:latest \
            fuzz \
            --target-url "http://${{ env.TARGET_IP }}:5000" \
            --time-budget ${{ github.event.inputs.wuppie_time }} \
            /app/openapi3.yml  # Positional argument instead of --spec-file

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: wuppiefuzz-results
          path: fuzzing_results/wuppiefuzz
