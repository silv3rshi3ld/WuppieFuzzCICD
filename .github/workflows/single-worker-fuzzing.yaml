name: Single Worker API Fuzzing

on:
  push:
    branches: [ SingleWorker ]
  pull_request:
    branches: [ SingleWorker ]

concurrency:
  group: single-worker-api-fuzzing
  cancel-in-progress: true

permissions:
  contents: read

env:
  DOCKER_NETWORK_NAME: fuzzing_network
  VAMPI_RESTLER_PORT: 5012
  VAMPI_WUPPIEFUZZ_PORT: 5022
  VAMPI_EVOMASTER_PORT: 5032
  BASE_DIR: ${{ github.workspace }}
  FUZZERS: restler wuppiefuzz evomaster

jobs:
  fuzzing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check Docker Configuration
        run: |
          chmod +x scripts/check-docker.sh
          ./scripts/check-docker.sh
        shell: bash

      - name: Create Docker Network
        run: |
          echo "Creating Docker network: ${{ env.DOCKER_NETWORK_NAME }}..."
          docker network create ${{ env.DOCKER_NETWORK_NAME }}
          echo "Network created successfully."
        shell: bash

      - name: Build VAmPI Images
        run: |
          echo "Building VAmPI images..."
          
          # Build VAmPI for RESTler
          docker build -t vampi-vulnerable-restler:latest \
            --build-arg PORT=${{ env.VAMPI_RESTLER_PORT }} \
            -f services/vampi/Dockerfile services/vampi/
          
          # Build VAmPI for WuppieFuzz
          docker build -t vampi-vulnerable-wuppiefuzz:latest \
            --build-arg PORT=${{ env.VAMPI_WUPPIEFUZZ_PORT }} \
            -f services/vampi/Dockerfile services/vampi/
          
          # Build VAmPI for EvoMaster
          docker build -t vampi-vulnerable-evomaster:latest \
            --build-arg PORT=${{ env.VAMPI_EVOMASTER_PORT }} \
            -f services/vampi/Dockerfile services/vampi/
        shell: bash

      - name: Start VAmPI Containers
        run: |
          echo "Starting VAmPI containers..."
          
          # Start VAmPI for RESTler
          docker run -d \
            --name vampi-restler \
            --network ${{ env.DOCKER_NETWORK_NAME }} \
            -p ${{ env.VAMPI_RESTLER_PORT }}:5000 \
            -e vulnerable=1 \
            vampi-vulnerable-restler:latest

          # Start VAmPI for WuppieFuzz
          docker run -d \
            --name vampi-wuppiefuzz \
            --network ${{ env.DOCKER_NETWORK_NAME }} \
            -p ${{ env.VAMPI_WUPPIEFUZZ_PORT }}:5000 \
            -e vulnerable=1 \
            vampi-vulnerable-wuppiefuzz:latest

          # Start VAmPI for EvoMaster
          docker run -d \
            --name vampi-evomaster \
            --network ${{ env.DOCKER_NETWORK_NAME }} \
            -p ${{ env.VAMPI_EVOMASTER_PORT }}:5000 \
            -e vulnerable=1 \
            vampi-vulnerable-evomaster:latest

          echo "Waiting for services to start..."
          sleep 10
        shell: bash

      - name: Build Fuzzer Images
        run: |
          echo "Building fuzzer images..."
          
          # Build RESTler
          docker build -t restler-fuzzer:latest \
            -f services/restler/Dockerfile.restler services/restler/
          
          # Build WuppieFuzz
          docker build -t wuppiefuzz:latest \
            -f services/wuppiefuzz/Dockerfile.wuppiefuzz services/wuppiefuzz/
          
          # Build EvoMaster
          docker build -t evomaster:latest \
            -f services/evomaster/Dockerfile.evomaster services/evomaster/
        shell: bash

      - name: Run Fuzzing Tests
        run: |
          echo "Starting fuzzing tests..."
          
          # Create results directory
          mkdir -p ${{ env.BASE_DIR }}/results
          
          # Run RESTler
          docker run --rm \
            --network ${{ env.DOCKER_NETWORK_NAME }} \
            -v ${{ env.BASE_DIR }}/results:/results \
            restler-fuzzer:latest \
            --target_ip vampi-restler \
            --target_port 5000 \
            --time_budget 1h
          
          # Run WuppieFuzz
          docker run --rm \
            --network ${{ env.DOCKER_NETWORK_NAME }} \
            -v ${{ env.BASE_DIR }}/results:/results \
            wuppiefuzz:latest \
            --target http://vampi-wuppiefuzz:5000 \
            --duration 1h
          
          # Run EvoMaster
          docker run --rm \
            --network ${{ env.DOCKER_NETWORK_NAME }} \
            -v ${{ env.BASE_DIR }}/results:/results \
            evomaster:latest \
            --targetHost vampi-evomaster \
            --targetPort 5000 \
            --maxTime 1h
        shell: bash

      - name: Upload Fuzzing Results
        uses: actions/upload-artifact@v3
        with:
          name: fuzzing-results
          path: ${{ env.BASE_DIR }}/results
          retention-days: 14

      - name: Process Results
        run: |
          echo "Processing fuzzing results..."
          
          # Check for any discovered vulnerabilities
          if find ${{ env.BASE_DIR }}/results -type f -exec grep -l "vulnerability" {} \; | grep -q .; then
            echo "::warning ::Potential vulnerabilities found in fuzzing results"
          fi
          
          # Generate summary report
          echo "### Fuzzing Test Summary" > ${{ env.BASE_DIR }}/results/summary.md
          echo "Results for each fuzzer:" >> ${{ env.BASE_DIR }}/results/summary.md
          
          for FUZZER in ${{ env.FUZZERS }}; do
            echo "#### $FUZZER" >> ${{ env.BASE_DIR }}/results/summary.md
            if [ -d "${{ env.BASE_DIR }}/results/$FUZZER" ]; then
              find "${{ env.BASE_DIR }}/results/$FUZZER" -type f -name "*.json" -exec cat {} \; | \
                jq -r '. | select(.type=="finding") | "- " + .description' >> ${{ env.BASE_DIR }}/results/summary.md
            fi
          done
        shell: bash

      - name: Upload Summary
        uses: actions/upload-artifact@v3
        with:
          name: fuzzing-summary
          path: ${{ env.BASE_DIR }}/results/summary.md
          retention-days: 14
