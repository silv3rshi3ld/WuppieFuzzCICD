name: Single Worker API Fuzzing

on:
  push:
    branches: [SingleWorker]
  pull_request:
    branches: [SingleWorker]
  workflow_dispatch:
    inputs:
      restler_time_budget:
        description: RESTler fuzzing time budget (hours)
        required: false
        default: '1'
        type: string
      wuppiefuzz_time_budget:
        description: WuppieFuzz time budget (minutes)
        required: false
        default: '60'
        type: string
      evomaster_time_budget:
        description: EvoMaster time budget (minutes)
        required: false
        default: '10'
        type: string

concurrency:
  group: single-worker-api-fuzzing
  cancel-in-progress: true

env:
  BASE_DIR: ${{ github.workspace }}
  DOCKER_BUILDKIT: 1

jobs:
  restler-fuzzing:
    runs-on: self-hosted
    env:
      VAMPI_PORT: 5012
    steps:
      - uses: actions/checkout@v4
      - name: Setup VAmPI Container
        uses: ./.github/actions/setup-vampi
        with:
          port: ${{ env.VAMPI_PORT }}
          network_name: restler_network_${{ github.run_id }}
          container_name: vampi-restler-${{ github.run_id }}

      - name: Calculate Time Budgets
        id: time-budgets
        run: |
          TOTAL_BUDGET=${{ github.event.inputs.restler_time_budget || 1 }}
          echo "fuzz_lean_budget=$(echo "$TOTAL_BUDGET * 0.25" | bc)" >> $GITHUB_OUTPUT
          echo "fuzz_budget=$(echo "$TOTAL_BUDGET * 0.75" | bc)" >> $GITHUB_OUTPUT

      - name: Create RESTler workspace directory
        run: mkdir -p ${{ env.BASE_DIR }}/workspace/restler

      - name: Run RESTler
        uses: ./.github/actions/run-restler
        with:
          base_dir: ${{ env.BASE_DIR }}
          fuzz_lean_time_budget: ${{ steps.time-budgets.outputs.fuzz_lean_budget }}
          fuzz_time_budget: ${{ steps.time-budgets.outputs.fuzz_budget }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: restler-results
          path: ${{ env.BASE_DIR }}/workspace/restler/output

      - name: Cleanup
        if: always()
        run: |
          docker rm -fv vampi-restler-${{ github.run_id }} || true
          docker network rm restler_network_${{ github.run_id }} || true
          # Add retry loop for cleanup
          for i in {1..5}; do
            docker rm -fv vampi-restler-${{ github.run_id }} || break
            sleep 5
          done
          docker image prune -f || true

  wuppiefuzz-fuzzing:
    runs-on: self-hosted
    env:
      VAMPI_PORT: 5022
    steps:
      - uses: actions/checkout@v4
      - name: Setup VAmPI Container
        uses: ./.github/actions/setup-vampi
        with:
          port: ${{ env.VAMPI_PORT }}
          network_name: wuppiefuzz_network_${{ github.run_id }}
          container_name: vampi-wuppiefuzz-${{ github.run_id }}

      - name: Run WuppieFuzz
        uses: ./.github/actions/run-wuppiefuzz
        with:
          port: ${{ env.VAMPI_PORT }}
          time_budget: ${{ github.event.inputs.wuppiefuzz_time_budget || 60 }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: wuppiefuzz-results
          path: wuppiefuzz/reports
          if-no-files-found: warn

      - name: Cleanup
        if: always()
        run: |
          docker rm -fv vampi-wuppiefuzz-${{ github.run_id }} || true
          docker network rm wuppiefuzz_network_${{ github.run_id }} || true
          for i in {1..5}; do
            docker rm -fv vampi-wuppiefuzz-${{ github.run_id }} || break
            sleep 5
          done
          docker image prune -f || true

  evomaster-fuzzing:
    runs-on: self-hosted
    env:
      VAMPI_PORT: 5032
    steps:
      - uses: actions/checkout@v4
      - name: Setup VAmPI Container
        uses: ./.github/actions/setup-vampi
        with:
          port: ${{ env.VAMPI_PORT }}
          network_name: evomaster_network_${{ github.run_id }}
          container_name: vampi-evomaster-${{ github.run_id }}

      - name: Run EvoMaster
        uses: ./.github/actions/run-evomaster
        with:
          time_budget: ${{ github.event.inputs.evomaster_time_budget || 10 }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: evomaster-results
          path: workspace/evomaster/output

      - name: Cleanup
        if: always()
        run: |
          docker rm -fv vampi-evomaster-${{ github.run_id }} || true
          docker network rm evomaster_network_${{ github.run_id }} || true
          for i in {1..5}; do
            docker rm -fv vampi-evomaster-${{ github.run_id }} || break
            sleep 5
          done
          docker image prune -f || true

  process-results:
    needs: [restler-fuzzing, wuppiefuzz-fuzzing, evomaster-fuzzing]
    runs-on: self-hosted
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Process Results
        id: process-results
        uses: ./.github/actions/process-results

      - uses: actions/upload-artifact@v4
        with:
          name: fuzzing-summary
          path: summary/summary.md

      - name: Check for Critical Findings
        if: steps.process-results.outputs.critical_findings == '1'
        run: |
          echo "Critical security findings detected! Check the summary for details."
          exit 1
