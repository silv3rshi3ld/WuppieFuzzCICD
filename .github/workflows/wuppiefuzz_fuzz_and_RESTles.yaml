name: Fuzz VAmPI with WuppieFuzz, EvoMaster, and Restler

on:
  push:
    branches: [Less-dependent-build]
  pull_request:
    branches: [Less-dependent-build]

jobs:
  evomaster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start VAmPI Container
        run: |
          docker run -d --name vampi -e vulnerable=1 -p 5000:5000 erev0s/vampi:latest
          sleep 10

      - name: Initialize VAmPI Database
        run: curl -s http://localhost:5000/createdb

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Download EvoMaster
        run: |
          curl -L -o evomaster.jar https://github.com/EMResearch/EvoMaster/releases/download/v3.4.0/evomaster.jar

      - name: Run EvoMaster in Blackbox Mode
        run: |
          java -jar evomaster.jar \
            --blackBox true \
            --bbSwaggerUrl services/vampi/openapi_specs/openapi3.yml \
            --outputFormat PYTHON_UNITTEST \
            --maxTime 1h \
            --outputFolder generated_tests \
            --ratePerMinute 60

      - name: Upload EvoMaster Results
        uses: actions/upload-artifact@v4
        with:
          name: evomaster-results
          path: generated_tests

  wuppiefuzz:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start VAmPI Container (Vulnerable Mode)
        run: |
          docker run -d --name vampi -e vulnerable=1 -p 5000:5000 erev0s/vampi:latest
          sleep 10

      - name: Initialize VAmPI Database
        run: curl -s http://localhost:5000/createdb

      - name: Set up Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Clone WuppieFuzz Repository
        run: git clone https://github.com/TNO-S3/WuppieFuzz.git

      - name: Build WuppieFuzz
        run: |
          cd WuppieFuzz
          cargo build --release

      - name: Generate Initial Corpus for Fuzzing
        run: |
          cd WuppieFuzz
          ./target/release/wuppiefuzz output-corpus --openapi-spec ../services/vampi/openapi_specs/openapi3.yml corpus_directory

      - name: Run WuppieFuzz Fuzzing Campaign
        run: |
          cd WuppieFuzz
          ./target/release/wuppiefuzz fuzz \
            --report \
            --log-level info \
            --initial-corpus corpus_directory \
            --timeout 60 \
            ../services/vampi/openapi_specs/openapi3.yml

      - name: Upload Fuzzing Report
        uses: actions/upload-artifact@v4
        with:
          name: fuzzing-report
          path: WuppieFuzz/reports/

  restler:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start VAmPI Container
        run: |
          docker run -d --name vampi -e vulnerable=1 -p 5000:5000 erev0s/vampi:latest
          sleep 10

      - name: Initialize VAmPI Database
        run: curl -s http://localhost:5000/createdb

      - name: Build Restler Docker Image
        run: docker build -f services/restler/Dockerfile.restler -t restler-fuzzer .

      - name: Prepare Restler Environment
        run: |
          mkdir -p services/restler/output
          chmod -R 777 services/restler/output

      - name: Run Restler Fuzzing via Docker Compose
        env:
          TARGET_HOST: localhost
          TARGET_PORT: 5000
          BASE_DIR: ${{ github.workspace }}
          NETWORK_SUFFIX: ${{ github.run_id }}
        run: |
          cd services/restler
          docker compose -f docker-compose.restler.yml up --abort-on-container-exit
          ls -la output || true

      - name: Upload Restler Results
        uses: actions/upload-artifact@v4
        with:
          name: restler-results
          path: workspace/output
