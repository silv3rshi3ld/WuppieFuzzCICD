name: Build and Fuzz

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_environment:
    runs-on: self-hosted
    outputs:
      commit_hash_wuppiefuzz: ${{ steps.get_commit_hash_wuppiefuzz.outputs.commit_hash }}
    steps:
      - name: Clean up Docker networks and containers (WuppieFuzz)
        if: always()
        run: |
          docker-compose -f wuppiefuzz/docker-compose-wuppiefuzz.yml down --remove-orphans -p wuppiefuzz || true
          docker network rm cicd_network || true

      - name: Clean up Docker networks and containers (Restler)
        if: always()
        run: |
          docker-compose -f restler/docker-compose-restler.yml down --remove-orphans -p restler || true
          docker network rm cicd_network || true

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose --version

      - name: Set Cache Key for WuppieFuzz
        id: set_cache_key_wuppiefuzz
        run: echo "docker_cache_key_wuppiefuzz=docker-cache-wuppiefuzz-${{ github.sha }}" >> $GITHUB_ENV

      - name: Cache Docker Layers for WuppieFuzz
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-wuppiefuzz
          key: ${{ env.docker_cache_key_wuppiefuzz }}
          restore-keys: |
            docker-cache-wuppiefuzz-

      - name: Set Cache Key for Restler
        id: set_cache_key_restler
        run: echo "docker_cache_key_restler=docker-cache-restler-${{ github.sha }}" >> $GITHUB_ENV

      - name: Cache Docker Layers for Restler
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-restler
          key: ${{ env.docker_cache_key_restler }}
          restore-keys: |
            docker-cache-restler-

      - name: Checkout Main Repository
        uses: actions/checkout@v4

      - name: Checkout Vulnerable REST API
        uses: actions/checkout@v4
        with:
          repository: silv3rshi3ld/WuppieFuzzCICD
          path: api

      - name: Checkout WuppieFuzz Repository
        uses: actions/checkout@v4
        with:
          repository: TNO-S3/WuppieFuzz
          path: wuppiefuzz

      - name: Get WuppieFuzz commit hash
        id: get_commit_hash_wuppiefuzz
        run: |
          commit_hash=$(git ls-remote https://github.com/TNO-S3/WuppieFuzz.git HEAD | awk '{print $1}')
          echo "commit_hash=${commit_hash}" >> $GITHUB_OUTPUT

      - name: Upload WuppieFuzz repository as artifact
        uses: actions/upload-artifact@v4
        with:
          name: WuppieFuzz
          path: wuppiefuzz

      - name: Upload Restler configuration as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Restler-Config
          path: restler/

  cache_dependencies_wuppiefuzz:
    runs-on: self-hosted
    needs: setup_environment
    steps:
      - name: Restore Rust and Git caches for WuppieFuzz
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            wuppiefuzz/target
          key: cargo-${{ runner.os }}-wuppieFuzz-${{ hashFiles('wuppiefuzz/Cargo.lock') }}-${{ needs.setup_environment.outputs.commit_hash_wuppiefuzz }}
          restore-keys: |
            cargo-${{ runner.os }}-wuppieFuzz-

  cache_dependencies_restler:
    runs-on: self-hosted
    needs: setup_environment
    steps:
      - name: Restore Python caches for Restler
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-restler-${{ github.sha }}
          restore-keys: |
            pip-cache-${{ runner.os }}-restler-

  build_and_run_services:
    runs-on: self-hosted
    needs: [cache_dependencies_wuppiefuzz, cache_dependencies_restler]
    env:
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
    steps:
      - name: Download WuppieFuzz repository artifact
        uses: actions/download-artifact@v4
        with:
          name: WuppieFuzz
          path: wuppiefuzz

      - name: Download Restler configuration artifact
        uses: actions/download-artifact@v4
        with:
          name: Restler-Config
          path: restler

      - name: Build and run base services (API and MongoDB)
        run: |
          docker network create cicd_network || true
          docker-compose -f docker-compose.base.yml up -d --build

      - name: Wait for API to be ready
        run: |
          echo "Waiting for API to become available..."
          for i in {1..30}; do
            if curl -s http://localhost:3001 > /dev/null; then
              echo "API is up!"
              break
            fi
            echo "Attempt $i: API not ready yet. Retrying in 5 seconds..."
            sleep 5
          done
          if ! curl -s http://localhost:3001 > /dev/null; then
            echo "API did not start in time."
            exit 1
          fi

      - name: Build and run Restler service
        run: |
          docker-compose -f restler/docker-compose-restler.yml up -d --build -p restler

      - name: Build and run WuppieFuzz service
        run: |
          docker-compose -f wuppiefuzz/docker-compose-wuppiefuzz.yml up -d --build -p wuppiefuzz

  run_fuzzers:
    runs-on: self-hosted
    needs: build_and_run_services
    env:
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      RUST_BACKTRACE: 1
    steps:
      - name: Download WuppieFuzz repository artifact
        uses: actions/download-artifact@v4
        with:
          name: WuppieFuzz
          path: wuppiefuzz

      - name: Download Restler configuration artifact
        uses: actions/download-artifact@v4
        with:
          name: Restler-Config
          path: restler

      - name: Cache Rust dependencies for WuppieFuzz
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            wuppiefuzz/target
          key: cargo-${{ runner.os }}-wuppieFuzz-${{ hashFiles('wuppiefuzz/Cargo.lock') }}-${{ needs.setup_environment.outputs.commit_hash_wuppiefuzz }}
          restore-keys: |
            cargo-${{ runner.os }}-wuppieFuzz-

      - name: rust-toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Install dependencies for WuppieFuzz
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Build WuppieFuzz
        run: |
          cd wuppiefuzz
          cargo build --release
          cd ..

      - name: Add WuppieFuzz to PATH
        run: |
          echo "${{ github.workspace }}/wuppiefuzz/target/release" >> $GITHUB_PATH

      - name: Generate initial corpus for WuppieFuzz
        run: |
          wuppiefuzz output-corpus --openapi-spec=openapi.yaml corpus_directory

      - name: Run WuppieFuzz
        run: |
          if [ -f "wuppiefuzz/login.yaml" ]; then
            wuppiefuzz fuzz --report=true --log-level=info --initial-corpus=corpus_directory --timeout=60 --authentication=wuppiefuzz/login.yaml openapi.yaml
          else
            wuppiefuzz fuzz --report=true --log-level=info --initial-corpus=corpus_directory --timeout=60 openapi.yaml
          fi

      - name: Install Restler dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip

      - name: Run RESTler Fuzzing via Docker Compose
        run: |
          docker-compose -f restler/docker-compose-restler.yml run --rm restler

  finalize:
    runs-on: self-hosted
    needs: run_fuzzers
    steps:
      - name: Upload WuppieFuzz report directory
        uses: actions/upload-artifact@v4
        with:
          name: WuppieFuzz-Report
          path: wuppiefuzz/reports/

      - name: Upload Restler report directory
        uses: actions/upload-artifact@v4
        with:
          name: Restler-Report
          path: restler/output/RestlerResults/

      - name: Adjust permissions of workspace
        if: always()
        run: |
          sudo chown -R $(id -u):$(id -g) $GITHUB_WORKSPACE
          sudo chmod -R u+rwX $GITHUB_WORKSPACE

      - name: Clean up Docker networks and containers
        if: always()
        run: |
          docker-compose -f docker-compose.base.yml down --remove-orphans
          docker-compose -f wuppiefuzz/docker-compose-wuppiefuzz.yml down --remove-orphans
          docker-compose -f restler/docker-compose-restler.yml down --remove-orphans
          docker network rm cicd_network || true
