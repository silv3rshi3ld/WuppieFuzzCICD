name: Generate Fuzzing Dashboard

on:
  workflow_run:
    workflows: ["Fuzz VAmPI with WuppieFuzz, EvoMaster, RESTler"]
    types:
      - completed
  workflow_dispatch:

jobs:
  generate-dashboard:
    # Disable this job since dashboard generation is now integrated into the fuzzing workflow
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download Artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: wuppiefuzz_fuzz_and_RESTles.yaml
          run_id: ${{ github.event.workflow_run.id }}
          workflow_conclusion: success
          name: |
            evomaster-results
            fuzzing-report
            restler-fuzz-results
          path: output-fuzzers/

      - name: Organize Files
        run: |
          # Create necessary directories
          mkdir -p output-fuzzers/{Evomaster,Wuppiefuzz,Restler}
          
          # Move evomaster results
          if [ -d "output-fuzzers/evomaster-results" ]; then
            mkdir -p output-fuzzers/Evomaster/evomaster-results
            cp -r output-fuzzers/evomaster-results/* output-fuzzers/Evomaster/evomaster-results/
            # Create zip file for parser
            cd output-fuzzers/Evomaster
            zip -r evomaster-results.zip evomaster-results/
            cd ../.. 
          fi
          
          # Move wuppiefuzz results
          if [ -d "output-fuzzers/fuzzing-report" ]; then
            mkdir -p output-fuzzers/Wuppiefuzz/fuzzing-report
            cp -r output-fuzzers/fuzzing-report/* output-fuzzers/Wuppiefuzz/fuzzing-report/
            # Create zip file for parser
            cd output-fuzzers/Wuppiefuzz
            zip -r fuzzing-report.zip fuzzing-report/
            cd ../.. 
          fi
          
          # Move restler results
          if [ -d "output-fuzzers/restler-fuzz-results" ]; then
            mkdir -p output-fuzzers/Restler/restler-fuzz-results
            cp -r output-fuzzers/restler-fuzz-results/* output-fuzzers/Restler/restler-fuzz-results/
            # Create zip file for parser
            cd output-fuzzers/Restler
            zip -r restler-fuzz-results.zip restler-fuzz-results/
            cd ../.. 
          fi
          
          # Cleanup temporary directories
          rm -rf output-fuzzers/evomaster-results
          rm -rf output-fuzzers/fuzzing-report
          rm -rf output-fuzzers/restler-fuzz-results
          
          # List the organized files for debugging
          find output-fuzzers -type f | sort

      - name: Parse Results
        run: |
          # Run all parsers
          python -m parsers
          
          # List generated data files for debugging
          find dashboard/data -type f | sort

      - name: Generate Dashboard
        run: |
          python generate_dashboard.py
          
          # List generated dashboard files for debugging
          find dashboard -type f -name "*.html" | sort

      - name: Package Dashboard
        run: |
          zip -r fuzzing-dashboard.zip dashboard/

      - name: Upload Dashboard
        uses: actions/upload-artifact@v3
        with:
          name: fuzzing-dashboard
          path: fuzzing-dashboard.zip
          retention-days: 90